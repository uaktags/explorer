extends layout

block content
  - var time = format_unixtime(tx.timestamp)
  .col-xs-12.col-md-12
    .card.card-body.d-lg-none.d-md-none(style='word-wrap:break-word;')
      | Viewing TXID: #{tx.txid}
    .card.card-default
      .card-header.d-none.d-md-block
        strong=settings.symbol + ' TXid: ' + tx.txid
        a(href=`/api/getrawtransaction?txid=${tx.txid}&decrypt=1`)
          span.fa.fa-info-circle.iquidus.pull-right
      div.table-responsive
        table.table.table-bordered.table-striped.summary-table 
          thead
            tr
              th #{t('tx.confirmations')}
              th.hidden-xs #{t('tx.block_hash')}
              th #{t('explorer.timestamp')}
              th
          tbody
            - var confirms = (blockcount - tx.blockindex);
            if confirms >= confirmations             
              tr.table-success
                  td #{confirms}
                  td.hidden-xs 
                    a(href='/block/'+tx.blockhash) #{tx.blockhash}
                  td #{time}
                  td.view_tx  
                    a(href='/block/'+tx.blockhash)
                      span.fa.fa-eye 
            else
              if confirms < (confirmations / 2)
                tr.table-danger
                  td #{confirms}
                  td.hidden-xs  
                    a(href='/block/'+tx.blockhash) #{tx.blockhash}
                  td #{time}
                  td.view_tx  
                    a(href='/block/'+tx.blockhash)
                      span.fa.fa-eye 
              else
                tr.table-warning
                  td #{confirms}
                  td.hidden-xs  
                    a(href='/block/'+tx.blockhash) #{tx.blockhash}
                  td #{time}
                  td.view_tx  
                    a(href='/block/'+tx.blockhash)
                      span.fa.fa-eye
    if tx.vout.length < 1
      .alert.alert-info(role='alert', style='text-align:center;')   
        strong #{t('tx.tx_nonstandard')}
    else
      .row
        .col-md-6
          .card.card-default
            .card-header
              strong #{st('tx.input_adress')}
              span.fa.fa-arrow-right.pull-right.d-xs-none
            table.table.table-bordered.table-striped.summary-table 
              thead
                tr
                  th #{=t('tx.address')}
                  if (tx.vin.length > 0)
                    if tx.vin[0].addresses != 'coinbase'
                      th.d-xs-none #{t('address.amount_coin', {coin: settings.symbol})}
              tbody
                if tx.vin.length > 0
                  each r in tx.vin
                    if r.addresses == 'coinbase' 
                      tr.table-info(style='text-align:center')
                        td #{t('tx.new_coins')}
                    else
                      - var ramount = (r.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true})
                      - var ramountParts = ramount.split('.')
                      tr
                        td 
                          a.loading(href='/address/' + r.addresses) 
                            =r.addresses
                        td.table-danger.d-xs-none #{ramountParts[0]}.
                          span.decimal #{ramountParts[1]}
                      tr.d-lg-none.d-md-none
                          td.table-danger #{ramountParts[0]}.
                            span.decimal #{ramountParts[1]} #{settings.symbol}
                else
                  tr.table-info(style='text-align:center')
                    td #{t('tx.proof_of_stake')}
        .col-md-6
          .card.card-default
            .card-header
              strong #{t('tx.recipients_address')s}
            table.table.table-bordered.table-striped.summary-table 
              thead
                tr
                  th #{t('tx.address')}
                  th.d-none.d-md-block #{t('tx.amount_coin',{coin : settings.symbol})}
              tbody
                each r in tx.vout
                  if tx.vout.length > 0 
                    - var ramount = (r.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true})
                    - var ramountParts = ramount.split('.')
                    tr.d-sm-block.d-md-none.d-none
                      td 
                        a.loading(href='/address/'+r.addresses) 
                          =r.addresses 
                      td.success.d-none.d-sm-block  #{ramountParts[0]}.
                        span.decimal #{ramountParts[1]}
                    tr.d-sm-block.d-md-none.d-none
                      td.success #{ramountParts[0]}.
                            span.decimal #{ramountParts[1]} #{settings.symbol}
                  else
                    - var ramount = (r.amount / 100000000).toLocaleString('en',{'minimumFractionDigits':2,'maximumFractionDigits':8,'useGrouping':true})
                    - var ramountParts = ramount.split('.')
                  tr
                    td 
                      a.loading(href='/address/' + r.addresses) 
                        =r.addresses 
                    td.table-success.d-none.d-md-block  #{ramountParts[0]}.
                        span.decimal #{ramountParts[1]}
                  tr.d-sm-block.d-md-none.d-none
                    td.table-success #{ramountParts[0]}.
                            span.decimal #{ramountParts[1]} #{settings.symbol}
    .footer-padding
